# Continuous Integration Workflow for MediaLocate
# This workflow provides comprehensive testing and validation across multiple environments

name: CI/CD Pipeline

# Trigger the workflow on push and pull request events
# Covers main development branches to ensure code quality
on:
  push:
    branches: [ main ]  # Key development branch
  pull_request:
    branches: [ main ]  # PRs targeting main branch

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [
          # Temporarily disabled for initial setup
          # ubuntu-latest,
          windows-latest,
          # macos-latest
        ]
        python-version: ["3.13"]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-poetry
        with:
          python-version: ${{ matrix.python-version }}
          os: ${{ matrix.os }}

      - name: Install system dependencies
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y exiftool ffmpeg
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install exiftool ffmpeg
          elif [ "$RUNNER_OS" == "Windows" ]; then
            # Add Chocolatey bin to PATH
            echo "C:\\ProgramData\\chocolatey\\bin" >> $env:GITHUB_PATH
            # Install ffmpeg and exiftool
            choco install ffmpeg-full exiftool -y
          fi

    # Code Quality Checks
      - name: Lint with flake8
        run: poetry run flake8 src

      - name: Type check with mypy
        run: poetry run mypy src

      - name: Security scan with Bandit
        run: poetry run bandit -r src

      # Run Release Validation Script disabled for now
      # - name: Run Release Validation Script
      #   run: poetry run python scripts/release_validation.py

      # Dependency automation disabled for now - can be enabled later if needed
      # - name: Run Dependabot
      #   uses: dependabot/dependabot-core@main
      #   with:
      #     command: update
      #     config-file: .github/dependabot.yml

      - name: Check dependencies
        run: |
          ffmpeg -version
          exiftool -ver
          python -c "import subprocess as sp; import sys; missing = [cmd for cmd in ['exiftool', 'ffmpeg'] if sp.run(['where', cmd], capture_output=True).returncode != 0]; sys.exit(1) if missing else sys.exit(0)"

      # Run unit tests
      - name: Run unit tests
        run: poetry run pytest tests/ -v --ignore=tests/release_validation

      # Generate coverage report
      - name: Generate coverage report
        run: poetry run pytest --cov=medialocate --cov-report=term --cov-report=xml

      # Codecov integration to be added later when token is configured
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v4
      #   env:
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
